local a=nLog;local b=true;local c=1;local d=0.005;local e=0.5;local f=true;local g=false;local h=nil;local i=2;local j="3.2.0"LuaPanda={}local k=LuaPanda;local l={}k.tools=l;k.curStackId=0;local m;local n={DISCONNECT_HOOK=0,LITE_HOOK=1,MID_HOOK=2,ALL_HOOK=3}local o={DISCONNECT=0,WAIT_CMD=1,STOP_ON_ENTRY=2,RUN=3,STEPOVER=4,STEPIN=5,STEPOUT=6,STEPOVER_STOP=7,STEPIN_STOP=8,STEPOUT_STOP=9,HIT_BREAKPOINT=10}local p="|*|"local q=3600*24;local r;local s;local t={}k.breaks=t;local u=""local v=""local w=""local x=""local y=""local z={}local A={}local B=false;local C=""local D;local E;local F;local G;local H;local I;local J;local K;local L;local M=false;local N=1;local O=1;local P={}local Q=""local R=true;local S={}local T={}local U=false;local V=false;local W='launch.json文件的配置项useCHook被设置为false.'local X=""local Y=""local Z=""local _=false;local a0;local a1;local a2=false;local a3;local a4;local a5=false;local a6=0;local a7=0;local a8=3;local a9=0;local aa;local ab;local ac;local ad=0;local ae;local af=0;local ag=false;local ah;local ai={}function k.formatPathCache()return ai end;local aj={}function k.fakeBreakPointCache()return aj end;if _VERSION=="Lua 5.1"then aa=loadstring else aa=load end;local ak=setmetatable({},{__index=function(al,am)local an=k.getWatchedVariable(am,_G.LuaPanda.curStackId,false)return an end,__newindex=function(al,am,ao)k.setVariableValue(am,_G.LuaPanda.curStackId,ao)end})function k.bindServer(ap,aq)G=F;G:settimeout(e)assert(G:bind(ap,aq))G:setoption("reuseaddr",true)assert(G:listen(0))end;function k.startServer(ap,aq)ap=tostring(ap or"0.0.0.0")aq=tonumber(aq)or 8818;a4=true;k.printToConsole("Debugger start as SERVER. bind host:"..ap.." port:"..tostring(aq),1)if F~=nil then k.printToConsole("[Warning] 调试器已经启动，请不要再次调用start()",1)return end;k.changeRunState(o.DISCONNECT)if not k.reGetSock()then k.printToConsole("[Error] LuaPanda debugger start success , but get Socket fail , please install luasocket!",2)return end;D=ap;E=aq;k.bindServer(D,E)local ar=G:accept()F=ar;if ar then k.printToConsole("First connect success!")k.connectSuccess()else k.printToConsole("First connect failed!")k.changeHookState(n.DISCONNECT_HOOK)end end;function k.start(ap,aq)ap=tostring(ap or"127.0.0.1")aq=tonumber(aq)or 8818;k.printToConsole("Debugger start as CLIENT. connect host:"..ap.." port:"..tostring(aq),1)if F~=nil then k.printToConsole("[Warning] 调试器已经启动，请不要再次调用start()",1)return end;k.changeRunState(o.DISCONNECT)if not k.reGetSock()then k.printToConsole("[Error] Start debugger but get Socket fail , please install luasocket!",2)return end;D=ap;E=aq;F:settimeout(d)local ar=k.sockConnect(F)if ar then k.printToConsole("First connect success!")k.connectSuccess()else k.printToConsole("First connect failed!")k.changeHookState(n.DISCONNECT_HOOK)end end;function k.sockConnect(F)if F then local ar,as=F:connect(D,E)if as=="connection refused"then k.reGetSock()end;return ar end;return nil end;function k.connectSuccess()if G then G:close()end;k.changeRunState(o.WAIT_CMD)k.printToConsole("connectSuccess",1)local an=k.debugger_wait_msg()if x==""then local at=debug.getinfo(1,"S")for au,av in pairs(at)do if au=="source"then x=tostring(av)a3=x:gsub('.*[Ll][Uu][Aa][Pp][Aa][Nn][Dd][Aa]','')if J~=nil then J.sync_debugger_path(x)end end end end;if y==""then y=l.getFileSource()if J~=nil then J.sync_tools_path(y)end end;if an==false then k.printToVSCode("[debugger error]初始化未完成, 建立连接但接收初始化消息失败。请更换端口重试",2)return end;k.printToVSCode("debugger init success",1)k.changeHookState(n.ALL_HOOK)if J==nil then if ac==nil and type(coroutine.create)=="function"then k.printToConsole("change coroutine.create")ac=coroutine.create;coroutine.create=function(...)local aw=ac(...)table.insert(T,aw)k.changeCoroutineHookState()return aw end else k.printToConsole("restart coroutine")k.changeCoroutineHookState()end end end;function k.clearData()H=nil;I=nil;t={}ai={}aj={}k.breaks=t;if J~=nil then J.sync_breakpoints()J.clear_pathcache()end end;function k.stopAttach()b=false;k.printToConsole("Debugger stopAttach",1)k.clearData()k.changeHookState(n.DISCONNECT_HOOK)ad=os.time()k.changeRunState(o.DISCONNECT)if F~=nil then F:close()if a4 and G then G=nil end end end;function k.disconnect()k.printToConsole("Debugger disconnect",1)k.clearData()k.changeHookState(n.DISCONNECT_HOOK)ad=os.time()k.changeRunState(o.DISCONNECT)if F~=nil then F:close()F=nil;G=nil end;if D==nil or E==nil then k.printToConsole("[Warning] User call LuaPanda.disconnect() before set debug ip & port, please call LuaPanda.start() first!",2)return end;k.reGetSock()end;function k.getBreaks()return t end;function k.testBreakpoint()if ab and ab~=""then return k.breakpointTestInfo()else local ax={}ax[#ax+1]="正在准备进行断点测试，请按照如下步骤操作\n"ax[#ax+1]="1. 请[删除]当前项目中所有断点;\n"ax[#ax+1]="2. 在当前停止行打一个断点;\n"ax[#ax+1]="3. 再次运行 'LuaPanda.testBreakpoint()'"a5=true;return table.concat(ax)end end;function k.breakpointTestInfo()local ay=k.getSpecificFunctionStackLevel(z.func)if type(ay)~="number"then ay=2 end;local az=z["source"]if az==nil and J~=nil then az=k.getPath(tostring(J.get_last_source()))end;local at=debug.getinfo(ay,"S")local aA=k.formatOpath(at["source"])aA=k.truncatedPath(aA,L)local ax={}local aB=tostring(az)ax[#ax+1]="\n- BreakPoint Test:"ax[#ax+1]="\nUser set lua extension:   ."..tostring(v)ax[#ax+1]="\nAuto get lua extension:   "..tostring(a3)if L and L~=''then ax[#ax+1]="\nUser set truncatedOPath:  "..L end;ax[#ax+1]="\nGetInfo:    "..at["source"]ax[#ax+1]="\nNormalized: "..aA;ax[#ax+1]="\nFormated:   "..aB;if ab and ab~=""then ax[#ax+1]="\nBreakpoint: "..ab end;if not a2 then if _ then ax[#ax+1]="\n说明:从lua虚拟机获取到的是绝对路径，Formated使用GetInfo路径。"..Z else ax[#ax+1]="\n说明:从lua虚拟机获取到的路径(GetInfo)是相对路径，调试器运行依赖的绝对路径(Formated)是来源于cwd+GetInfo拼接。如Formated路径错误请尝试调整cwd或改变VSCode打开文件夹的位置。也可以在Formated对应的文件下打一个断点，调整直到Formated和Breaks Info中断点路径完全一致。"..Z end else ax[#ax+1]="\n说明:自动路径(autoPathMode)模式已开启。"if ab and ab~=""then if string.find(ab,aB,-1*string.len(aB),true)then if M==false then ax[#ax+1]="本文件中断点可正常命中。"ax[#ax+1]="同名文件中的断点识别(distinguishSameNameFile) 未开启，请确保 VSCode 断点不要存在于同名 lua 文件中。"else ax[#ax+1]="同名文件中的断点识别(distinguishSameNameFile) 已开启。"if string.find(ab,aA,1,true)then ax[#ax+1]="本文件中断点可被正常命中"else ax[#ax+1]="断点可能无法被命中，因为 lua 虚拟机中获得的路径 Normalized 不是断点路径 Breakpoint 的子串。 如有需要，可以在 launch.json 中设置 truncatedOPath 来去除 Normalized 部分路径。"end end else ax[#ax+1]="断点未被命中，原因是 Formated 不是 Breakpoint 路径的子串，或者 Formated 和 Breakpoint 文件后缀不一致"end else ax[#ax+1]="如果要进行断点测试，请使用 LuaPanda.testBreakpoint()。"end end;return table.concat(ax)end;function k.getBaseInfo()local ax={}local aC=""if jit and jit.version then aC=","..tostring(jit.version)end;ax[#ax+1]="Lua Ver:".._VERSION..aC.." | Adapter Ver:"..tostring(K).." | Debugger Ver:"..tostring(j)local aD=""if J~=nil then local aE,aF=J.sync_getLibVersion()local aG=aF~=nil and tostring(aE).." for "..tostring(math.ceil(aF))or tostring(aE)ax[#ax+1]=" | hookLib Ver:"..aG;aD=aD.."说明: 已加载 libpdebug 库."else aD=aD.."说明: 未能加载 libpdebug 库。原因请使用 LuaPanda.doctor() 查看"end;local aH=false;if type(a9)=="number"and a9==1 then aH=true end;ax[#ax+1]=" | supportREPL:"..tostring(aH)ax[#ax+1]=" | useBase64EncodeString:"..tostring(V)ax[#ax+1]=" | codeEnv:"..tostring(H)ax[#ax+1]=" | distinguishSameNameFile:"..tostring(M)..'\n'ax[#ax+1]=aD;if X~=nil and X~=''then ax[#ax+1]='\n'..X end;return table.concat(ax)end;function k.doctor()local ax={}if j~=K then ax[#ax+1]="\n- 建议更新版本\nLuaPanda VSCode插件版本是"..K..", LuaPanda.lua文件版本是"..j.."。建议检查并更新到最新版本。"ax[#ax+1]="\n更新方式   : https://github.com/Tencent/LuaPanda/blob/master/Docs/Manual/update.md"ax[#ax+1]="\nRelease版本: https://github.com/Tencent/LuaPanda/releases"end;if J==nil then ax[#ax+1]="\n\n- libpdebug 库没有加载\n"if a1 then if ag==true then ax[#ax+1]="用户使用 LuaPanda.lua 中 clibPath 变量指定了 plibdebug 的位置: "..I;if k.tryRequireClib("libpdebug",I)then ax[#ax+1]="\n引用成功"else ax[#ax+1]="\n引用错误:"..W end else local aI,aJ;if H=="Darwin"then aI="/?.so;"aJ="mac"elseif H=="Linux"then aI="/?.so;"aJ="linux"else aI="/?.dll;"aJ="win"end;local aK;if _VERSION=="Lua 5.1"then aK="501"else aK="503"end;local aL=I..aJ.."/x86/"..aK..aI;local aM=I..aJ.."/x86_64/"..aK..aI;ax[#ax+1]="尝试引用x64库: "..aM;if k.tryRequireClib("libpdebug",aM)then ax[#ax+1]="\n引用成功"else ax[#ax+1]="\n引用错误:"..W;ax[#ax+1]="\n尝试引用x86库: "..aL;if k.tryRequireClib("libpdebug",aL)then ax[#ax+1]="\n引用成功"else ax[#ax+1]="\n引用错误:"..W end end end else ax[#ax+1]="原因是"..W end end;local az=Q;if J~=nil then az=k.getPath(tostring(J.get_last_source()))end;if not a2 and az and az~=""then local aN=k.fileExists(az)if not aN then ax[#ax+1]="\n\n- 路径存在问题\n"local aO=k.stringSplit(az,'/')local aP=false;for aQ,al in pairs(k.getBreaks())do if string.find(aQ,aO[#aO],1,true)then aP=true;ax[#ax+1]=k.breakpointTestInfo()ax[#ax+1]="\nfilepath: "..aQ;if _ then ax[#ax+1]="\n说明:从lua虚拟机获取到的是绝对路径，format使用getinfo路径。"else ax[#ax+1]="\n说明:从lua虚拟机获取到的是相对路径，调试器运行依赖的绝对路径(format)是来源于cwd+getinfo拼接。"end;ax[#ax+1]="\nfilepath是VSCode通过获取到的文件正确路径 , 对比format和filepath，调整launch.json中CWD，或改变VSCode打开文件夹的位置。使format和filepath一致即可。\n如果format和filepath路径仅大小写不一致，设置launch.json中 pathCaseSensitivity:false 可忽略路径大小写"end end;if aP==false then ax[#ax+1]="\n找不到文件:"..az..", 请检查路径是否正确。\n或者在VSCode文件"..aO[#aO].."中打一个断点后，再执行一次doctor命令，查看路径分析结果。"end end end;if N<1 or i<1 then ax[#ax+1]="\n\n- 日志等级\n"if N<1 then ax[#ax+1]="当前日志等级是"..N..", 会产生大量日志，降低调试速度。建议调整launch.json中logLevel:1"end;if i<1 then ax[#ax+1]="当前console日志等级是"..i..", 过低的日志等级会降低调试速度，建议调整LuaPanda.lua文件头部consoleLogLevel=2"end end;if#ax==0 then ax[#ax+1]="未检测出问题"end;return table.concat(ax)end;function k.fileExists(aR)local aS=io.open(aR,"r")if aS~=nil then io.close(aS)return true else return false end end;function k.getInfo()local ax={}ax[#ax+1]="\n- Base Info: \n"ax[#ax+1]=k.getBaseInfo()ax[#ax+1]="\n\n- User Setting: \n"ax[#ax+1]="stopOnEntry:"..tostring(a0)..' | 'ax[#ax+1]="logLevel:"..N..' | 'ax[#ax+1]="consoleLogLevel:"..i..' | 'ax[#ax+1]="pathCaseSensitivity:"..tostring(R)..' | 'ax[#ax+1]="attachMode:"..tostring(b)..' | 'ax[#ax+1]="autoPathMode:"..tostring(a2)..' | 'if a1 then ax[#ax+1]="useCHook:true"else ax[#ax+1]="useCHook:false"end;if N==0 or i==0 then ax[#ax+1]="\n说明:日志等级过低，会影响执行效率。请调整logLevel和consoleLogLevel值 >= 1"end;ax[#ax+1]="\n\n- Path Info: \n"ax[#ax+1]="clibPath: "..tostring(I)..'\n'ax[#ax+1]="debugger: "..x.." | "..k.getPath(x)..'\n'ax[#ax+1]="cwd     : "..w..'\n'ax[#ax+1]=k.breakpointTestInfo()if Y~=nil and Y~=''then ax[#ax+1]='\n'..Y end;ax[#ax+1]="\n\n- Breaks Info: \nUse 'LuaPanda.getBreaks()' to watch."return table.concat(ax)end;function k.isInMain()return ae end;function k.tryRequireClib(aT,aU)k.printToVSCode("tryRequireClib search : ["..aT.."] in "..aU)local aV=package.cpath;package.cpath=package.cpath..';'..aU;k.printToVSCode("package.cpath:"..package.cpath)local as,aW=pcall(function()J=require(aT)end)if as then if type(J)=="table"and k.getTableMemberNum(J)>0 then k.printToVSCode("tryRequireClib success : ["..aT.."] in "..aU)package.cpath=aV;return true else W="tryRequireClib fail : require success, but member function num <= 0; ["..aT.."] in "..aU;k.printToVSCode(W)J=nil;package.cpath=aV;return false end else W=aW;k.printToVSCode("[Require clib error]: "..aW,0)end;package.cpath=aV;return false end;function k.revFindString(aX,aY,aZ)local a_=string.reverse(aX)local al,b0=string.find(a_,aY,1,aZ)if b0==nil then return nil end;return string.len(a_)-b0+1 end;function k.revSubString(aX,b1,aZ)local b0=k.revFindString(aX,b1,aZ)if b0==nil then return nil end;return string.sub(aX,b0+1,aX.length)end;function k.stringSplit(aX,b2)local b3={}string.gsub(aX,'[^'..b2 ..']+',function(b4)table.insert(b3,b4)end)return b3 end;function k.setCallbackId(b5)if b5~=nil and b5~="0"then u=tostring(b5)end end;function k.getCallbackId()if u==nil then u="0"end;local b5=u;u="0"return b5 end;function k.trim(b6)return string.gsub(b6,"^%s*(.-)%s*$","%1")end;function k.getTableMemberNum(b7)local b8=0;if type(b7)~="table"then k.printToVSCode("[debugger Error] getTableMemberNum get "..tostring(type(b7)),2)return b8 end;for au,av in pairs(b7)do b8=b8+1 end;return b8 end;function k.getMsgTable(b9,ba)ba=ba or 0;local bb={}bb["cmd"]=b9;bb["callbackId"]=ba;bb["info"]={}return bb end;function k.serializeTable(bc,bd)local be=l.serializeTable(bc,bd)return be end;function k.printToVSCode(aX,bf,type)type=type or 0;bf=bf or 0;if r==o.DISCONNECT or N>bf then return end;local bg={}bg["callbackId"]="0"if type==0 then bg["cmd"]="output"elseif type==1 then bg["cmd"]="tip"else bg["cmd"]="debug_console"end;bg["info"]={}bg["info"]["logInfo"]=tostring(aX)k.sendMsg(bg)end;function k.printToConsole(aX,bf)bf=bf or 0;if i>bf then return end;a("[LuaPanda] "..tostring(aX))end;function k.genUnifiedPath(aR)if aR==""or aR==nil then return""end;if R==false then aR=string.lower(aR)end;aR=string.gsub(aR,[[\]],"/")local bh=k.stringSplit(aR,'/')local bi={}for au,av in ipairs(bh)do if av=='.'then elseif av==".."and#bi>=1 and bi[#bi]:sub(2,2)~=':'then table.remove(bi)else table.insert(bi,av)end end;local bj=table.concat(bi,'/')if aR:sub(1,1)=='/'then bj='/'..bj end;if"Windows_NT"==H then if U then bj=bj:gsub("^%a:",string.upper)Z="路径中Windows盘符已转为大写。"else bj=bj:gsub("^%a:",string.lower)Z="路径中Windows盘符已转为小写。"end end;return bj end;function k.getCacheFormatPath(bk)if bk==nil then return ai end;return ai[bk]end;function k.setCacheFormatPath(bk,bl)ai[bk]=bl end;function k.formatOpath(bm)if bm:sub(1,1)=='@'then bm=bm:sub(2)end;if bm:sub(1,2)=='./'then bm=bm:sub(2)end;bm=k.genUnifiedPath(bm)if R==false then bm=string.lower(bm)end;if a3==nil or a3==''then if not bm:find(v,-1*v:len(),true)then bm=string.gsub(bm,"%.","/")else bm=k.changePotToSep(bm,v)end else bm=k.changePotToSep(bm,a3)end;return bm end;function k.sendLuaMemory()local bn=collectgarbage("count")local bg={}bg["callbackId"]="0"bg["cmd"]="refreshLuaMemory"bg["info"]={}bg["info"]["memInfo"]=tostring(bn)k.sendMsg(bg)end;function k.reGetSock()if G then return true end;if F~=nil then pcall(function()F:close()end)end;F=lua_extension and lua_extension.luasocket and lua_extension.luasocket().tcp()if F==nil then if pcall(function()F=require("socket.core").tcp()end)then k.printToConsole("reGetSock success")elseif pcall(function()F=require("socket").tcp()end)then k.printToConsole("reGetSock2 success")else if h and pcall(function()F=h()end)then k.printToConsole("reGetSock custom success")else k.printToConsole("[Error] reGetSock fail",2)return false end end else k.printToConsole("reGetSock ue4 success")end;return true end;function k.reConnect()if s==n.DISCONNECT_HOOK then if os.time()-ad<c then return 0 end;k.printToConsole("Reconnect !")if F==nil then k.reGetSock()end;local ar;if a4==true and r==o.DISCONNECT then if G==nil then k.bindServer(D,E)end;F=G:accept()ar=F else F:settimeout(d)ar=k.sockConnect(F)end;if ar then k.printToConsole("reconnect success")k.connectSuccess()return 1 else k.printToConsole("reconnect failed")ad=os.time()return 0 end end;return 1 end;function k.sendMsg(bg)if V and bg["info"]~=nil then for al,av in ipairs(bg["info"])do if av["type"]=="string"then av["value"]=l.base64encode(av["value"])end end end;local bo=m.encode(bg)if r==o.DISCONNECT then k.printToConsole("[debugger error] disconnect but want sendMsg:"..bo,2)k.disconnect()return end;local bp,aW;if pcall(function()bp,aW=F:send(bo..p.."\n")end)then if bp==nil then if aW=="closed"then k.disconnect()end end end end;function k.dataProcess(bq)k.printToVSCode("debugger get:"..bq)local br=m.decode(bq)if br==nil then k.printToVSCode("[error] Json is error",2)return end;if br.callbackId~="0"then k.setCallbackId(br.callbackId)end;if br.cmd=="continue"then local at=br.info;if at.isFakeHit=="true"and at.fakeBKPath and at.fakeBKLine then ah=false;if J~=nil and J.set_bp_twice_check_res then J.set_bp_twice_check_res(0)end;if nil==aj[at.fakeBKPath]then aj[at.fakeBKPath]={}end;table.insert(aj[at.fakeBKPath],at.fakeBKLine)else k.changeRunState(o.RUN)end;local bs=k.getMsgTable("continue",k.getCallbackId())k.sendMsg(bs)elseif br.cmd=="stopOnStep"then k.changeRunState(o.STEPOVER)local bs=k.getMsgTable("stopOnStep",k.getCallbackId())k.sendMsg(bs)k.changeHookState(n.ALL_HOOK)elseif br.cmd=="stopOnStepIn"then k.changeRunState(o.STEPIN)local bs=k.getMsgTable("stopOnStepIn",k.getCallbackId())k.sendMsg(bs)k.changeHookState(n.ALL_HOOK)elseif br.cmd=="stopOnStepOut"then k.changeRunState(o.STEPOUT)local bs=k.getMsgTable("stopOnStepOut",k.getCallbackId())k.sendMsg(bs)k.changeHookState(n.ALL_HOOK)elseif br.cmd=="setBreakPoint"then k.printToVSCode("dataTable.cmd == setBreakPoint")aj={}local bt=br.info.path;bt=k.genUnifiedPath(bt)if a5 then ab=bt end;if a2 then local bu=k.getFilenameFromPath(bt)if t[bu]==nil then t[bu]={}end;t[bu][bt]=br.info.bks;for au,av in pairs(t[bu])do if next(av)==nil then t[bu][au]=nil end end else if t[bt]==nil then t[bt]={}end;t[bt][bt]=br.info.bks;for au,av in pairs(t[bt])do if next(av)==nil then t[bt][au]=nil end end end;for au,av in pairs(t)do if next(av)==nil then t[au]=nil end end;if J~=nil then J.sync_breakpoints()end;if r~=o.WAIT_CMD then if J==nil then local bv,bw=k.checkHasBreakpoint(Q)if bv==false then if bw==true then k.changeHookState(n.MID_HOOK)else k.changeHookState(n.LITE_HOOK)end else k.changeHookState(n.ALL_HOOK)end end else local bs=k.getMsgTable("setBreakPoint",k.getCallbackId())k.sendMsg(bs)return end;local bs=k.getMsgTable("setBreakPoint",k.getCallbackId())k.sendMsg(bs)k.printToVSCode("LuaPanda.getInfo()\n"..k.getInfo())k.debugger_wait_msg()elseif br.cmd=="setVariable"then if r==o.STOP_ON_ENTRY or r==o.HIT_BREAKPOINT or r==o.STEPOVER_STOP or r==o.STEPIN_STOP or r==o.STEPOUT_STOP then local bs=k.getMsgTable("setVariable",k.getCallbackId())local bx=tonumber(br.info.varRef)local ao=tostring(br.info.newValue)local by=true;local am=tostring(br.info.varName)local bz=string.sub(ao,1,1)local bA=string.sub(ao,-1,-1)if bz==bA then if bz=="'"or bz=='"'then ao=string.sub(ao,2,-2)by=false end end;if ao=="nil"and by==true then ao=nil;by=false elseif ao=="true"and by==true then ao=true;by=false elseif ao=="false"and by==true then ao=false;by=false elseif tonumber(ao)and by==true then ao=tonumber(ao)by=false end;if br.info.stackId~=nil and tonumber(br.info.stackId)~=nil and tonumber(br.info.stackId)>1 then k.curStackId=tonumber(br.info.stackId)else k.printToVSCode("未能获取到堆栈层级，默认使用 this.curStackId;")end;if bx<10000 then bs.info=k.createSetValueRetTable(am,ao,by,k.curStackId,P[bx])else local bB;if bx>=10000 and bx<20000 then bB="local"elseif bx>=20000 and bx<30000 then bB="global"elseif bx>=30000 then bB="upvalue"end;bs.info=k.createSetValueRetTable(am,ao,by,k.curStackId,nil,bB)end;k.sendMsg(bs)k.debugger_wait_msg()end elseif br.cmd=="getVariable"then if r==o.STOP_ON_ENTRY or r==o.HIT_BREAKPOINT or r==o.STEPOVER_STOP or r==o.STEPIN_STOP or r==o.STEPOUT_STOP then local bs=k.getMsgTable("getVariable",k.getCallbackId())local bx=tonumber(br.info.varRef)if bx<10000 then local bC=k.getVariableRef(br.info.varRef,true)bs.info=bC elseif bx>=10000 and bx<20000 then if br.info.stackId~=nil and tonumber(br.info.stackId)>1 then k.curStackId=tonumber(br.info.stackId)if type(A[k.curStackId-1])~="table"or type(A[k.curStackId-1].func)~="function"then local aX="getVariable getLocal currentCallStack "..k.curStackId-1 .." Error\n"..k.serializeTable(A,"currentCallStack")k.printToVSCode(aX,2)bs.info={}else local bD=k.getSpecificFunctionStackLevel(A[k.curStackId-1].func)local bC=k.getVariable(bD,true)bs.info=bC end end elseif bx>=20000 and bx<30000 then local bC=k.getGlobalVariable()bs.info=bC elseif bx>=30000 then if br.info.stackId~=nil and tonumber(br.info.stackId)>1 then k.curStackId=tonumber(br.info.stackId)if type(A[k.curStackId-1])~="table"or type(A[k.curStackId-1].func)~="function"then local aX="getVariable getUpvalue currentCallStack "..k.curStackId-1 .." Error\n"..k.serializeTable(A,"currentCallStack")k.printToVSCode(aX,2)bs.info={}else local bC=k.getUpValueVariable(A[k.curStackId-1].func,true)bs.info=bC end end end;k.sendMsg(bs)k.debugger_wait_msg()end elseif br.cmd=="initSuccess"then if br.info.isNeedB64EncodeStr=="true"then V=true else V=false end;v=br.info.luaFileExtension;local bE=br.info.TempFilePath;if bE:sub(-1,-1)==[[\]]or bE:sub(-1,-1)==[[/]]then bE=bE:sub(1,-2)end;C=bE;w=k.genUnifiedPath(br.info.cwd)N=tonumber(br.info.logLevel)or 1;if br.info.autoPathMode=="true"then a2=true else a2=false end;if br.info.pathCaseSensitivity=="true"then R=true;L=br.info.truncatedOPath or""else R=false;L=string.lower(br.info.truncatedOPath or"")end;if br.info.distinguishSameNameFile=="true"then M=true else M=false end;if nil==H then if type(br.info.OSType)=="string"then H=br.info.OSType else H="Windows_NT"X="未能检测出OSType, 可能是node os库未能加载，系统使用默认设置Windows_NT"end else end;ag=false;if nil==I then if type(br.info.clibPath)=="string"then I=br.info.clibPath else I=""Y="未能正确获取libpdebug库所在位置, 可能无法加载libpdebug库。"end else ag=true end;if tostring(br.info.useCHook)=="true"and"Lua 5.4"~=_VERSION then a1=true;if ag==true then if luapanda_chook~=nil then J=luapanda_chook else if not k.tryRequireClib("libpdebug",I)then k.printToVSCode("Require clib failed, use Lua to continue debug, use LuaPanda.doctor() for more information.",1)end end else local aI,aJ;if H=="Darwin"then aI="/?.so;"aJ="mac"elseif H=="Linux"then aI="/?.so;"aJ="linux"else aI="/?.dll;"aJ="win"end;local aK;if _VERSION=="Lua 5.1"then aK="501"else aK="503"end;local aL=I..aJ.."/x86/"..aK..aI;local aM=I..aJ.."/x86_64/"..aK..aI;if luapanda_chook~=nil then J=luapanda_chook else if not(k.tryRequireClib("libpdebug",aM)or k.tryRequireClib("libpdebug",aL))then k.printToVSCode("Require clib failed, use Lua to continue debug, use LuaPanda.doctor() for more information.",1)end end end else a1=false end;K=tostring(br.info.adapterVersion)local bs=k.getMsgTable("initSuccess",k.getCallbackId())local bF=0;if J~=nil then bF=1;local bG=k.stringSplit(j,'%.')local bH=bG[1]*10000+bG[2]*100+bG[3]if J.sync_lua_debugger_ver then J.sync_lua_debugger_ver(bH)end;J.sync_config(N,R and 1 or 0)J.sync_tempfile_path(C)J.sync_cwd(w)J.sync_file_ext(v)end;a9=0;if aa~=nil and type(aa)=="function"then if pcall(aa("return 0"))then a9=1 end end;local bc={debuggerVer=tostring(j),UseHookLib=tostring(bF),UseLoadstring=tostring(a9),isNeedB64EncodeStr=tostring(V)}bs.info=bc;k.sendMsg(bs)a0=br.info.stopOnEntry;if br.info.stopOnEntry=="true"then k.changeRunState(o.STOP_ON_ENTRY)else k.debugger_wait_msg(1)k.changeRunState(o.RUN)end elseif br.cmd=="getWatchedVariable"then local bs=k.getMsgTable("getWatchedVariable",k.getCallbackId())local bD=tonumber(br.info.stackId)if a9==1 then k.curStackId=bD;local bI=k.processWatchedExp(br.info)bs.info=bI;k.sendMsg(bs)k.debugger_wait_msg()return else local bJ=k.getWatchedVariable(br.info.varName,bD,true)if bJ~=nil then bs.info=bJ end;k.sendMsg(bs)k.debugger_wait_msg()end elseif br.cmd=="stopRun"then local bs=k.getMsgTable("stopRun",k.getCallbackId())k.sendMsg(bs)if not a4 then k.disconnect()end elseif"LuaGarbageCollect"==br.cmd then k.printToVSCode("collect garbage!")collectgarbage("collect")k.sendLuaMemory()k.debugger_wait_msg()elseif"runREPLExpression"==br.cmd then k.curStackId=tonumber(br.info.stackId)local bI=k.processExp(br.info)local bs=k.getMsgTable("runREPLExpression",k.getCallbackId())bs.info=bI;k.sendMsg(bs)k.debugger_wait_msg()else end end;function k.createSetValueRetTable(am,ao,by,bK,bL,bB)local at;local bM;if by==false then bM={}bM[1]={variablesReference=0,value=ao,name=am,type=type(ao)}else bM=k.getWatchedVariable(tostring(ao),bK,true)end;if bM~=nil then local bN;local bO=bM[1].value;if by==true then if tonumber(bM[1].variablesReference)>0 then bN=P[tonumber(bM[1].variablesReference)]else if bM[1].type=='number'then bN=tonumber(bM[1].value)end;if bM[1].type=='string'then bN=tostring(bM[1].value)local bz=string.sub(bN,1,1)local bA=string.sub(bN,-1,-1)if bz==bA then if bz=="'"or bz=='"'then bN=string.sub(bN,2,-2)bO=bN end end end;if bM[1].type=='boolean'then if bM[1].value=="true"then bN=true else bN=false end end;if bM[1].type=='nil'then bN=nil end end else bN=bM[1].value end;local bP;if type(bL)~=table then bP=k.setVariableValue(am,bK,bN,bB)else bL[am]=bN;bP=true end;if bM[1].type=="string"then bO='"'..bO..'"'end;if bP~=false and bP~=nil then local bQ="变量 "..am.." 赋值成功"at={success="true",name=bM[1].name,type=bM[1].type,value=bO,variablesReference=tostring(bM[1].variablesReference),tip=bQ}else at={success="false",type=type(bN),value=bO,tip="找不到要设置的变量"}end else at={success="false",type=nil,value=nil,tip="输入的值无意义"}end;return at end;function k.receiveMessage(bR)bR=bR or q;F:settimeout(bR)if#S>0 then local bS=S[1]table.remove(S,1)k.dataProcess(bS)return true end;if r==o.DISCONNECT then k.disconnect()return false end;if F==nil then k.printToConsole("[debugger error]接收信息失败  |  reason: socket == nil",2)return end;local bT,aW=F:receive()if bT==nil then if aW=="closed"then k.printToConsole("[debugger error]接收信息失败  |  reason:"..aW,2)k.disconnect()end;return false else local bU=string.sub(bT,1,-1*(p:len()+1))local bV=string.find(bU,p,1,true)if bV==nil then k.dataProcess(bU)else repeat local bW=string.sub(bU,1,bV-1)table.insert(S,bW)local bX=string.sub(bU,bV+p:len(),-1)bV=string.find(bX,p,1,true)until not bV;k.receiveMessage()end;return true end end;function k.debugger_wait_msg(bR)bR=bR or q;if r==o.WAIT_CMD then local an=k.receiveMessage(bR)return an end;if r==o.STEPOVER or r==o.STEPIN or r==o.STEPOUT or r==o.RUN then k.receiveMessage(0)return end;if r==o.STEPOVER_STOP or r==o.STEPIN_STOP or r==o.STEPOUT_STOP or r==o.HIT_BREAKPOINT or r==o.STOP_ON_ENTRY then k.sendLuaMemory()k.receiveMessage(q)return end end;function k.getStackTable(bY)local bZ=0;if J~=nil then bZ=bY or a8 else bZ=bY or k.getSpecificFunctionStackLevel(z.func)end;local b_={}local c0=0;repeat local at=debug.getinfo(bZ,"SlLnf")if at==nil then break end;if at.source=="=[C]"then break end;local c1={}c1.file=k.getPath(at)local c2=k.formatOpath(at.source)c1.oPath=k.truncatedPath(c2,L)c1.name="文件名"c1.line=tostring(at.currentline)local c3=bZ-3;if J~=nil then c3=c3+2 end;c1.index=tostring(c3)table.insert(b_,c1)local c4={}c4.name=c1.file;c4.line=c1.line;c4.func=at.func;c4.realLy=bZ;table.insert(A,c4)if c0==0 then c0=bZ end;bZ=bZ+1 until at==nil;return b_,c0 end;function k.changePotToSep(c5,c6)local b0=c5:find(c6,-1*c6:len(),true)if b0 then local c7=c5:sub(1,b0-1):gsub("%.","/")c5=c7 ..c6 end;return c5 end;function k.truncatedPath(c8,c9)if c8 and c8~=''and c9 and c9~=""then local al,ca=string.find(c8,c9)if ca then c8=string.sub(c8,ca+1)end end;return c8 end;function k.getPath(at)local c5=at;if type(at)=="table"then c5=at.source end;local cb=k.getCacheFormatPath(c5)if cb~=nil and type(cb)=="string"then return cb end;local cc=c5;if c5:sub(1,1)=='@'then c5=c5:sub(2)end;if c5:sub(1,2)=='./'then c5=c5:sub(3)end;if f then if a3==nil or a3==''then if not c5:find(v,-1*v:len(),true)then c5=string.gsub(c5,"%.","/")else c5=k.changePotToSep(c5,v)end else c5=k.changePotToSep(c5,a3)end end;if v~=""then if string.find(v,"%%%d")then c5=string.gsub(c5,"%.[%w%.]+$",v)else c5=string.gsub(c5,"%.[%w%.]+$","")c5=c5 .."."..v end end;if not a2 then if c5:sub(1,1)==[[/]]or c5:sub(1,2):match("^%a:")then _=true else _=false;if w~=""then local cd=string.find(c5,w,1,true)if cd==nil then c5=w.."/"..c5 end end end end;c5=k.genUnifiedPath(c5)if a2 then c5=k.getFilenameFromPath(c5)end;k.setCacheFormatPath(cc,c5)return c5 end;function k.getFilenameFromPath(aR)if aR==nil then return''end;return string.match(aR,"([^/]*)$")end;function k.getCurrentFunctionStackLevel()local ce=2;repeat local at=debug.getinfo(ce,"S")if at~=nil then local cd=at.source==x or at.source==y;if cd==false then return ce-1 end end;ce=ce+1 until not at;return 0 end;function k.getSpecificFunctionStackLevel(cf)local ce=2;repeat local at=debug.getinfo(ce,"f")if at~=nil then if at.func==cf then return ce-1 end end;ce=ce+1 until not at;return 0 end;function k.checkCurrentLayerisLua(cg)local at=debug.getinfo(cg,"S")if at==nil then return nil end;at.source=k.genUnifiedPath(at.source)if at~=nil then for au,av in pairs(at)do if au=="what"then if av=="C"then return false else return true end end end end;return nil end;function k.checkRealHitBreakpoint(ch,ci)if ch and aj[ch]then for al,cj in ipairs(aj[ch])do if tonumber(cj)==tonumber(ci)then k.printToVSCode("cache hit bp in same name file.  source:"..tostring(ch).." line:"..tostring(ci))return false end end end;return true end;function k.isHitBreakpoint(ck,bm,cl)if t[ck]then local c2;for cm,cn in pairs(t[ck])do ab=cm;local co=false,cur_node;for al,cp in ipairs(cn)do if tonumber(cp["line"])==tonumber(cl)then co=true;cur_node=cp;ab=cm;break end end;if co then if c2==nil then c2=k.formatOpath(bm)c2=k.truncatedPath(c2,L)end;if not M or string.match(cm,c2)and k.checkRealHitBreakpoint(bm,cl)then if cur_node["type"]=="0"then local cq=k.IsMeetCondition(cur_node["condition"])return cq elseif cur_node["type"]=="1"then k.printToVSCode("[LogPoint Output]: "..cur_node["logMessage"],2,2)return false else return true end end end end else a5=false;ab=''end;return false end;function k.IsMeetCondition(cr)A={}P={}O=1;if J then k.getStackTable(4)else k.getStackTable()end;k.curStackId=2;local cs={["varName"]=cr}local ct=k.processWatchedExp(cs)local cu=false;local function cv()if ct[1]["isSuccess"]=="true"then if ct[1]["value"]=="nil"or ct[1]["value"]=="false"and ct[1]["type"]=="boolean"then cu=false else cu=true end else cu=false end end;xpcall(cv,function()cu=false end)return cu end;function k.BP()k.printToConsole("BP()")if J==nil then if s==n.DISCONNECT_HOOK then k.printToConsole("BP() but NO HOOK")return end;local aw,cw=coroutine.running()if _VERSION=="Lua 5.1"then if aw==nil then cw=true else cw=false end end;if cw==true then k.printToConsole("BP() in main")else k.printToConsole("BP() in coroutine")debug.sethook(aw,k.debug_hook,"lrc")end;B=true else if J.get_libhook_state()==n.DISCONNECT_HOOK then k.printToConsole("BP() but NO C HOOK")return end;J.sync_bp_hit(1)end;k.changeHookState(n.ALL_HOOK)return true end;function k.checkHasBreakpoint(cx)local cy=false;if next(t)==nil then cy=false else cy=true end;if cx~=nil then return t[cx]~=nil,cy else return cy end end;function k.checkfuncHasBreakpoint(cz,cA,cx)if t[cx]==nil then return false end;cz=tonumber(cz)cA=tonumber(cA)if cz>=cA then return true end;if k.getTableMemberNum(t[cx])<=0 then return false else for au,av in pairs(t[cx])do for al,cp in ipairs(av)do if tonumber(cp.line)>cz and tonumber(cp.line)<=cA then return true end end end end;return false end;function k.debug_hook(cB,ci)if k.reConnect()==0 then return end;if N==0 then local cC={"-----enter debug_hook-----\n","event:",cB,"  line:",tostring(ci)," currentHookState:",s," currentRunState:",r}local cD=table.concat(cC)k.printToVSCode(cD)end;if s==n.LITE_HOOK then local cE=os.time()if cE-af>1 then k.debugger_wait_msg(0)af=cE end;return end;local at;local aw,cw=coroutine.running()if _VERSION=="Lua 5.1"then if aw==nil then cw=true else cw=false end end;ae=cw;if cw==true then at=debug.getinfo(2,"Slf")else at=debug.getinfo(aw,2,"Slf")end;at.event=cB;k.real_hook_process(at)end;function k.real_hook_process(at)local cF=false;local cB=at.event;local cd=at.source==x or at.source==y;if cd==true then return end;if r==o.RUN or r==o.STEPOVER or r==o.STEPIN or r==o.STEPOUT then local cE=os.time()if cE-af>1 then k.debugger_wait_msg(0)af=cE end end;if at.source=="=[C]"then k.printToVSCode("current method is C")return end;if at.source=="temp buffer"then k.printToVSCode("current method is in temp buffer")return end;if at.source=="chunk"then k.printToVSCode("current method is in chunk")return end;if at.short_src:match("%[string \"")then if at.source:match("[\n;=]")then k.printToVSCode("hook jump Code String!")cF=true end end;if cF==false then at.orininal_source=at.source;at.source=k.getPath(at)end;if z["currentline"]==at["currentline"]and z["source"]==at["source"]and z["func"]==at["func"]and z["event"]==cB then k.printToVSCode("run twice")end;if cF==false then z=at;z["event"]=cB;Q=at.source end;if N==0 and cF==false then local cC={"[lua hook] event:",tostring(cB)," currentRunState:",tostring(r)," currentHookState:",tostring(s)," jumpFlag:",tostring(cF)}for au,av in pairs(at)do table.insert(cC,tostring(au))table.insert(cC,":")table.insert(cC,tostring(av))table.insert(cC," ")end;local cD=table.concat(cC)k.printToVSCode(cD)end;local cG=false;if tostring(cB)=="line"and cF==false then if r==o.RUN or r==o.STEPOVER or r==o.STEPIN or r==o.STEPOUT then cG=k.isHitBreakpoint(at.source,at.orininal_source,at.currentline)or B;if cG==true then k.printToVSCode("HitBreakpoint!")local cH=a6;local cI=a7;local cJ=r;a6=0;a7=0;k.changeRunState(o.HIT_BREAKPOINT)ah=true;if B then B=false;k.SendMsgWithStack("stopOnCodeBreakpoint")else k.SendMsgWithStack("stopOnBreakpoint")if ah==false then cG=false;k.changeRunState(cJ)a6=cH;a7=cI end end end end end;if cG==true then return end;if r==o.STEPOVER then if cB=="line"and a6<=0 and cF==false then a6=0;k.changeRunState(o.STEPOVER_STOP)k.SendMsgWithStack("stopOnStep")elseif cB=="return"or cB=="tail return"then if a6~=0 then a6=a6-1 end elseif cB=="call"then a6=a6+1 end elseif r==o.STOP_ON_ENTRY then if cB=="line"and cF==false then k.SendMsgWithStack("stopOnEntry")end elseif r==o.STEPIN then if cB=="line"and cF==false then k.changeRunState(o.STEPIN_STOP)k.SendMsgWithStack("stopOnStepIn")end elseif r==o.STEPOUT then if cF==false then if a7<=-1 then a7=0;k.changeRunState(o.STEPOUT_STOP)k.SendMsgWithStack("stopOnStepOut")end end;if cB=="return"or cB=="tail return"then a7=a7-1 elseif cB=="call"then a7=a7+1 end end;if J==nil then if r==o.RUN and cF==false and s~=n.DISCONNECT_HOOK then local bv,bw=k.checkHasBreakpoint(Q)if bv==false then if bw==true then k.changeHookState(n.MID_HOOK)else k.changeHookState(n.LITE_HOOK)end else local cK=k.checkfuncHasBreakpoint(z.linedefined,z.lastlinedefined,Q)if cK then k.changeHookState(n.ALL_HOOK)else k.changeHookState(n.MID_HOOK)end end;if(cB=="return"or cB=="tail return")and s==n.MID_HOOK then k.changeHookState(n.ALL_HOOK)end end end end;function k.SendMsgWithStack(cL)local bs=k.getMsgTable(cL)local cM=0;bs["stack"],cM=k.getStackTable()if cM~=0 then z["func"]=debug.getinfo(cM-1,'f').func end;k.sendMsg(bs)k.debugger_wait_msg()end;function k.changeHookState(b6)if J==nil and s==b6 then return end;k.printToConsole("change hook state :"..b6)if b6~=n.DISCONNECT_HOOK then k.printToVSCode("change hook state : "..b6)end;s=b6;if b6==n.DISCONNECT_HOOK then if b==true then if J then J.lua_set_hookstate(n.DISCONNECT_HOOK)else debug.sethook(k.debug_hook,"r",1000000)end else if J then J.endHook()else debug.sethook()end end elseif b6==n.LITE_HOOK then if J then J.lua_set_hookstate(n.LITE_HOOK)else debug.sethook(k.debug_hook,"r")end elseif b6==n.MID_HOOK then if J then J.lua_set_hookstate(n.MID_HOOK)else debug.sethook(k.debug_hook,"rc")end elseif b6==n.ALL_HOOK then if J then J.lua_set_hookstate(n.ALL_HOOK)else debug.sethook(k.debug_hook,"lrc")end end;if J==nil then k.changeCoroutineHookState()end end;function k.changeRunState(b6,cN)local cO;if cN==1 then cO="libc"else cO="lua"end;k.printToConsole("changeRunState :"..b6 .." | from:"..cO)if b6~=o.DISCONNECT and b6~=o.WAIT_CMD then k.printToVSCode("changeRunState :"..b6 .." | from:"..cO)end;if J~=nil and cN~=1 then J.lua_set_runstate(b6)end;r=b6;A={}P={}O=1 end;function k.changeCoroutineHookState(b6)b6=b6 or s;k.printToConsole("change [Coroutine] HookState: "..tostring(b6))for au,aw in pairs(T)do if coroutine.status(aw)=="dead"then table.remove(T,au)else if b6==n.DISCONNECT_HOOK then if b==true then debug.sethook(aw,k.debug_hook,"r",1000000)else debug.sethook(aw,k.debug_hook,"")end elseif b6==n.LITE_HOOK then debug.sethook(aw,k.debug_hook,"r")elseif b6==n.MID_HOOK then debug.sethook(aw,k.debug_hook,"rc")elseif b6==n.ALL_HOOK then debug.sethook(aw,k.debug_hook,"lrc")end end end end;function k.clearEnv()if k.getTableMemberNum(ak)>0 then ak=setmetatable({},getmetatable(ak))end end;function k.showEnv()return ak end;function k.findTableVar(cP,cQ)if type(cP)~="table"or type(cQ)~="table"then return nil end;local cR=2;local cS=cQ;local cT=false;repeat if cP[cR]~=nil then local cU=nil;xpcall(function()cU=cS[tonumber(cP[cR])]end,function()cU=nil end)if cU==nil then xpcall(function()cS=cS[tostring(cP[cR])]end,function()cS=nil end)else cS=cU end;cR=cR+1;if cS==nil then return nil end else cT=true end until cT==true;return cS end;function k.createWatchedVariableInfo(cV,cW)local cX={}cX.name=cV;cX.type=tostring(type(cW))xpcall(function()cX.value=tostring(cW)end,function()cX.value=tostring(type(cW)).." [value can't trans to string]"end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=cW;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(cW)cX.value=cY.." Members "..cX.value end elseif cX.type=="string"then cX.value='"'..cW..'"'end;return cX end;function k.setGlobal(am,ao)_G[am]=ao;k.printToVSCode("[setVariable success] 已设置  _G."..am.." = "..tostring(ao))return true end;function k.setUpvalue(am,ao,bD,cP)local an=false;local cZ=k.getUpValueVariable(A[bD-1].func,true)for c_,cQ in ipairs(cZ)do if cQ.name==am then if#cP>0 and type(cQ)=="table"then local d0=k.findTableVar(cP,P[cQ.variablesReference])if d0~=nil then local bP=debug.setupvalue(A[bD-1].func,c_,ao)if bP==am then k.printToConsole("[setVariable success1] 已设置 upvalue "..am.." = "..tostring(ao))an=true else k.printToConsole("[setVariable error1] 未能设置 upvalue "..am.." = "..tostring(ao).." , 返回结果: "..tostring(bP))end;return an end else local bP=debug.setupvalue(A[bD-1].func,c_,ao)if bP==am then k.printToConsole("[setVariable success] 已设置 upvalue "..am.." = "..tostring(ao))an=true else k.printToConsole("[setVariable error] 未能设置 upvalue "..am.." = "..tostring(ao).." , 返回结果: "..tostring(bP))end;return an end end end;return an end;function k.setLocal(am,ao,cP,bD)local d1=tonumber(bD)local d2=d1 and d1-2 or 0;local d3,ay=k.getVariable(nil,true,d2)local an=false;for c_,cQ in ipairs(d3)do if cQ.name==am then if#cP>0 and type(cQ)=="table"then local d0=k.findTableVar(cP,P[cQ.variablesReference])if d0~=nil then local bP=debug.setlocal(ay,d3[c_].index,ao)if bP==am then k.printToConsole("[setVariable success1] 已设置 local "..am.." = "..tostring(ao))an=true else k.printToConsole("[setVariable error1] 未能设置 local "..am.." = "..tostring(ao).." , 返回结果: "..tostring(bP))end;return an end else local bP=debug.setlocal(ay,d3[c_].index,ao)if bP==am then k.printToConsole("[setVariable success] 已设置 local "..am.." = "..tostring(ao))an=true else k.printToConsole("[setVariable error] 未能设置 local "..am.." = "..tostring(ao).." , 返回结果: "..tostring(bP))end;return an end end end;return an end;function k.setVariableValue(am,bD,ao,d4)k.printToConsole("setVariableValue | varName:"..tostring(am).." stackId:"..tostring(bD).." newValue:"..tostring(ao).." limit:"..tostring(d4))if tostring(am)==nil or tostring(am)==""then k.printToConsole("[setVariable Error] 被赋值的变量名为空",2)k.printToVSCode("[setVariable Error] 被赋值的变量名为空",2)return false end;local cP={}if am:match('%.')then cP=k.stringSplit(am,'%.')if type(cP)~="table"or#cP<1 then return false end;am=cP[1]end;if d4=="local"then local an=k.setLocal(am,ao,cP,bD)return an elseif d4=="upvalue"then local an=k.setUpvalue(am,ao,bD,cP)return an elseif d4=="global"then local an=k.setGlobal(am,ao)return an else local an=k.setLocal(am,ao,cP,bD)or k.setUpvalue(am,ao,bD,cP)or k.setGlobal(am,ao)k.printToConsole("set Value res :"..tostring(an))return an end end;function k.getWatchedVariable(am,bD,d5)k.printToConsole("getWatchedVariable | varName:"..tostring(am).." stackId:"..tostring(bD).." isFormatVariable:"..tostring(d5))if tostring(am)==nil or tostring(am)==""then return nil end;if type(A[bD-1])~="table"or type(A[bD-1].func)~="function"then local aX="getWatchedVariable currentCallStack "..bD-1 .." Error\n"..k.serializeTable(A,"currentCallStack")k.printToVSCode(aX,2)return nil end;local d6=am;local cP={}if am:match('%.')then cP=k.stringSplit(am,'%.')if type(cP)~="table"or#cP<1 then return nil end;am=cP[1]end;local d7={}local ay=k.getSpecificFunctionStackLevel(A[bD-1].func)local d3=k.getVariable(ay,d5)local cZ=k.getUpValueVariable(A[bD-1].func,d5)local d8={}table.insert(d8,d3)table.insert(d8,cZ)for al,d3 in ipairs(d8)do for c_,cQ in ipairs(d3)do if cQ.name==am then if#cP>0 and type(cQ)=="table"then local d0=k.findTableVar(cP,P[cQ.variablesReference])if d0~=nil then if d5 then local cX=k.createWatchedVariableInfo(d6,d0)table.insert(d7,cX)return d7 else return d0.value end end else if d5 then table.insert(d7,cQ)return d7 else return cQ.value end end end end end;if _G[am]~=nil then if#cP>0 and type(_G[am])=="table"then local d0=k.findTableVar(cP,_G[am])if d0~=nil then if d5 then local cX=k.createWatchedVariableInfo(d6,d0)table.insert(d7,cX)return d7 else return d0 end end else if d5 then local cX=k.createWatchedVariableInfo(am,_G[am])table.insert(d7,cX)return d7 else return _G[am]end end end;k.printToConsole("getWatchedVariable not find variable")return nil end;function k.getVariableRef(d9)local da=tonumber(d9)local d7={}if tostring(type(P[da]))=="table"then for db,av in pairs(P[da])do local cX={}if type(db)=="string"then cX.name='"'..tostring(db)..'"'else cX.name=tostring(db)end;cX.type=tostring(type(av))xpcall(function()cX.value=tostring(av)end,function()cX.value=tostring(type(av)).." [value can't trans to string]"end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=av;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(av)cX.value=cY.." Members "..(cX.value or'')end elseif cX.type=="string"then cX.value='"'..av..'"'end;table.insert(d7,cX)end;local dc=getmetatable(P[da])if dc~=nil and type(dc)=="table"then local cX={}cX.name="_Metatable_"cX.type=tostring(type(dc))xpcall(function()cX.value="元表 "..tostring(dc)end,function()cX.value="元表 [value can't trans to string]"end)cX.variablesReference=O;P[O]=dc;O=O+1;table.insert(d7,cX)end elseif tostring(type(P[da]))=="function"then d7=k.getUpValueVariable(P[da],true)elseif tostring(type(P[da]))=="userdata"then local dd=getmetatable(P[da])if dd~=nil and type(dd)=="table"then local cX={}cX.name="_Metatable_"cX.type=tostring(type(dd))xpcall(function()cX.value="元表 "..tostring(dd)end,function()cX.value="元表 [value can't trans to string]"end)cX.variablesReference=O;P[O]=dd;O=O+1;table.insert(d7,cX)if g and dd.__pairs~=nil and type(dd.__pairs)=="function"then for db,av in pairs(P[da])do local cX={}cX.name=tostring(db)cX.type=tostring(type(av))xpcall(function()cX.value=tostring(av)end,function()cX.value=tostring(type(av)).." [value can't trans to string]"end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=av;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(av)cX.value=cY.." Members "..(cX.value or'')end elseif cX.type=="string"then cX.value='"'..av..'"'end;table.insert(d7,cX)end end end end;return d7 end;function k.getGlobalVariable(...)local d7={}for au,av in pairs(_G)do local cX={}cX.name=tostring(au)cX.type=tostring(type(av))xpcall(function()cX.value=tostring(av)end,function()cX.value=tostring(type(av)).." [value can't trans to string]"end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=av;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(av)cX.value=cY.." Members "..(cX.value or'')end elseif cX.type=="string"then cX.value='"'..av..'"'end;table.insert(d7,cX)end;return d7 end;function k.getUpValueVariable(de,d5)local df=true;if d5==true then df=false end;de=de or z.func;local d7={}if de==nil then return d7 end;local c_=1;repeat local db,av=debug.getupvalue(de,c_)if db then local cX={}cX.name=db;cX.type=tostring(type(av))cX.variablesReference="0"if df==false then xpcall(function()cX.value=tostring(av)end,function()cX.value=tostring(type(av)).." [value can't trans to string]"end)if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=av;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(av)cX.value=cY.." Members "..(cX.value or'')end elseif cX.type=="string"then cX.value='"'..av..'"'end else cX.value=av end;table.insert(d7,cX)c_=c_+1 end until not db;return d7 end;function k.getVariable(cg,d5,d2)local df=true;if d5==true then df=false end;local ay=0;if cg~=nil and type(cg)=="number"then ay=cg+1 else ay=k.getSpecificFunctionStackLevel(z.func)end;if ay==0 then k.printToVSCode("[error]获取层次失败！",2)return end;local d7={}local dg=ay;local au=1;if type(d2)=='number'then dg=dg+d2 end;repeat local db,av=debug.getlocal(dg,au)if db==nil then break end;if"(*temporary)"~=tostring(db)then local cX={}cX.name=db;cX.type=tostring(type(av))cX.variablesReference="0"cX.index=au;if df==false then xpcall(function()cX.value=tostring(av)end,function()cX.value=tostring(type(av)).." [value can't trans to string]"end)if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then cX.variablesReference=O;P[O]=av;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(av)cX.value=cY.." Members "..(cX.value or'')end elseif cX.type=="string"then cX.value='"'..av..'"'end else cX.value=av end;local dh=k.checkSameNameVar(d7,cX)if dh~=0 then d7[dh]=cX else table.insert(d7,cX)end end;au=au+1 until db==nil;return d7,dg-1 end;function k.checkSameNameVar(d7,cX)for au,av in pairs(d7)do if av.name==cX.name then return au end end;return 0 end;function k.processExp(bb)local di;local cX={}cX.isSuccess="true"if bb~=nil then local dj=k.trim(tostring(bb.Expression))local dk=false;if dk==false then if dj:find("p ",1,true)==1 then dj=dj:sub(3)end;local dl="return "..dj;local aS=aa(dl)or aa(dj)if type(aS)=="function"then if _VERSION=="Lua 5.1"then setfenv(aS,ak)else debug.setupvalue(aS,1,ak)end;xpcall(function()di=aS()end,function()di="输入错误指令。\n + 请检查指令是否正确\n + 指令仅能在[暂停在断点时]输入, 请不要在程序持续运行时输入"cX.isSuccess=false end)else di="指令执行错误。\n + 请检查指令是否正确\n + 可以直接输入表达式，执行函数或变量名，并观察执行结果"cX.isSuccess=false end end end;cX.name="Exp"cX.type=tostring(type(di))xpcall(function()cX.value=tostring(di)end,function(dm)cX.value=tostring(type(di)).." [value can't trans to string] "..dm;cX.isSuccess=false end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then P[O]=di;cX.variablesReference=O;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(di)cX.value=cY.." Members "..cX.value end elseif cX.type=="string"then cX.value='"'..di..'"'end;k.clearEnv()local dn={}table.insert(dn,cX)return dn end;function k.processWatchedExp(bb)local di;local dj="return "..tostring(bb.varName)k.printToConsole("processWatchedExp | expression: "..dj)local aS=aa(dj)local cX={}cX.isSuccess="true"if type(aS)=="function"then if _VERSION=="Lua 5.1"then setfenv(aS,ak)else debug.setupvalue(aS,1,ak)end;xpcall(function()di=aS()end,function()di="输入了错误的变量信息"cX.isSuccess="false"end)else di="未能找到变量的值"cX.isSuccess="false"end;cX.name=bb.varName;cX.type=tostring(type(di))xpcall(function()cX.value=tostring(di)end,function()cX.value=tostring(type(di)).." [value can't trans to string]"cX.isSuccess="false"end)cX.variablesReference="0"if cX.type=="table"or cX.type=="function"or cX.type=="userdata"then P[O]=di;cX.variablesReference=O;O=O+1;if cX.type=="table"then local cY=k.getTableMemberNum(di)cX.value=cY.." Members "..cX.value end elseif cX.type=="string"then cX.value='"'..di..'"'end;local dn={}table.insert(dn,cX)return dn end;function l.getFileSource()local at=debug.getinfo(1,"S")for au,av in pairs(at)do if au=="source"then return av end end end;function l.printTable(b7,bd,dp)local aX=l.show(b7,bd,dp)a(aX)end;function l.serializeTable(b7,bd,dp)local aX=l.show(b7,bd,dp)return aX end;function l.show(b7,bd,dp)local dq;local dr;local function ds(b7)return next(b7)==nil end;local function dt(du)local dv=tostring(du)if type(du)=="function"then local at=debug.getinfo(du,"S")if at.what=="C"then return string.format("%q",dv..", C function")else return string.format("%q",dv..", defined in ("..at.linedefined.."-"..at.lastlinedefined..")"..at.source)end elseif type(du)=="number"or type(du)=="boolean"then return dv else return string.format("%q",dv)end end;local function dw(cj,bd,dp,dx,dy)dp=dp or""dx=dx or{}dy=dy or bd;dq=dq..dp..dy;if type(cj)~="table"then dq=dq.." = "..dt(cj)..";\n"else if dx[cj]then dq=dq.." = {}; -- "..dx[cj].." (self reference)\n"dr=dr..bd.." = "..dx[cj]..";\n"else dx[cj]=bd;if ds(cj)then dq=dq.." = {};\n"else dq=dq.." = {\n"for au,av in pairs(cj)do au=dt(au)local dz=string.format("%s[%s]",bd,au)dy=string.format("[%s]",au)dw(av,dz,dp.."   ",dx,dy)end;dq=dq..dp.."};\n"end end end end;bd=bd or"PRINT_Table"if type(b7)~="table"then return bd.." = "..dt(b7)end;dq,dr="",""dw(b7,bd,dp)return dq..dr end;function l.createJson()local math=require('math')local string=require("string")local table=require("table")local m={}local dA={}m.EMPTY_ARRAY={}m.EMPTY_OBJECT={}local dB;local dC;local dD;local dE;local dF;local dG;local dH;local dI;local dJ;local dK;function m.encode(av)if av==nil then return"null"end;local dL=type(av)if dL=='string'then return'"'..dA.encodeString(av)..'"'end;if dL=='number'or dL=='boolean'then return tostring(av)end;if dL=='table'then local dM={}local dN,dO=dJ(av)if dN then for c_=1,dO do table.insert(dM,m.encode(av[c_]))end else for c_,dP in pairs(av)do if dK(c_)and dK(dP)then table.insert(dM,'"'..dA.encodeString(c_)..'":'..m.encode(dP))end end end;if dN then return'['..table.concat(dM,',')..']'else return'{'..table.concat(dM,',')..'}'end end;if dL=='function'and av==m.null then return'null'end;assert(false,'encode attempt to encode unsupported type '..dL..':'..tostring(av))end;function m.decode(b6,dQ)dQ=dQ and dQ or 1;dQ=dH(b6,dQ)assert(dQ<=string.len(b6),'Unterminated JSON encoded object found at position in ['..b6 ..']')local dR=string.sub(b6,dQ,dQ)if dR=='{'then return dF(b6,dQ)end;if dR=='['then return dB(b6,dQ)end;if string.find("+-0123456789.e",dR,1,true)then return dE(b6,dQ)end;if dR==[["]]or dR==[[']]then return dG(b6,dQ)end;if string.sub(b6,dQ,dQ+1)=='/*'then return m.decode(b6,dC(b6,dQ))end;return dD(b6,dQ)end;function m.null()return m.null end;function dB(b6,dQ)local dS={}local dT=string.len(b6)assert(string.sub(b6,dQ,dQ)=='[','decode_scanArray called but array does not start at position '..dQ..' in string:\n'..b6)dQ=dQ+1;local dU=1;repeat dQ=dH(b6,dQ)assert(dQ<=dT,'JSON String ended unexpectedly scanning array.')local dR=string.sub(b6,dQ,dQ)if dR==']'then return dS,dQ+1 end;if dR==','then dQ=dH(b6,dQ+1)end;assert(dQ<=dT,'JSON String ended unexpectedly scanning array.')local dV;dV,dQ=m.decode(b6,dQ)dS[dU]=dV;dU=dU+1 until false end;function dC(b6,dQ)assert(string.sub(b6,dQ,dQ+1)=='/*',"decode_scanComment called but comment does not start at position "..dQ)local dW=string.find(b6,'*/',dQ+2)assert(dW~=nil,"Unterminated comment in string at "..dQ)return dW+2 end;function dD(b6,dQ)local dX={["true"]=true,["false"]=false,["null"]=nil}local dY={"true","false","null"}for c_,au in pairs(dY)do if string.sub(b6,dQ,dQ+string.len(au)-1)==au then return dX[au],dQ+string.len(au)end end;assert(nil,'Failed to scan constant from string '..b6 ..' at starting position '..dQ)end;function dE(b6,dQ)local dW=dQ+1;local dT=string.len(b6)local dZ="+-0123456789.e"while string.find(dZ,string.sub(b6,dW,dW),1,true)and dW<=dT do dW=dW+1 end;local d_=string.sub(b6,dQ,dW-1)return d_,dW end;function dF(b6,dQ)local dV={}local dT=string.len(b6)local aQ,cj;assert(string.sub(b6,dQ,dQ)=='{','decode_scanObject called but object does not start at position '..dQ..' in string:\n'..b6)dQ=dQ+1;repeat dQ=dH(b6,dQ)assert(dQ<=dT,'JSON string ended unexpectedly while scanning object.')local dR=string.sub(b6,dQ,dQ)if dR=='}'then return dV,dQ+1 end;if dR==','then dQ=dH(b6,dQ+1)end;assert(dQ<=dT,'JSON string ended unexpectedly scanning object.')aQ,dQ=m.decode(b6,dQ)assert(dQ<=dT,'JSON string ended unexpectedly searching for value of key '..aQ)dQ=dH(b6,dQ)assert(dQ<=dT,'JSON string ended unexpectedly searching for value of key '..aQ)assert(string.sub(b6,dQ,dQ)==':','JSON object key-value assignment mal-formed at '..dQ)dQ=dH(b6,dQ+1)assert(dQ<=dT,'JSON string ended unexpectedly searching for value of key '..aQ)cj,dQ=m.decode(b6,dQ)dV[aQ]=cj until false end;local e0={["\\t"]="\t",["\\f"]="\f",["\\r"]="\r",["\\n"]="\n",["\\b"]="\b"}setmetatable(e0,{__index=function(b7,au)return string.sub(au,2)end})function dG(b6,dQ)assert(dQ,'decode_scanString(..) called without start position')local e1=string.sub(b6,dQ,dQ)assert(e1==[["]]or e1==[[']],'decode_scanString called for a non-string')local b7={}local c_,dP=dQ,dQ;while string.find(b6,e1,dP+1)~=dP+1 do local e2=dP;c_,dP=string.find(b6,"\\.",dP+1)local e3,e4=string.find(b6,e1,e2+1)if not c_ or e3<c_ then c_,dP=e3,e4-1 end;table.insert(b7,string.sub(b6,e2+1,c_-1))if string.sub(b6,c_,dP)=="\\u"then local e5=string.sub(b6,dP+1,dP+4)dP=dP+4;local db=tonumber(e5,16)assert(db,"String decoding failed: bad Unicode escape "..e5 .." at position "..c_.." : "..dP)local e3;if db<0x80 then e3=string.char(db%0x80)elseif db<0x800 then e3=string.char(0xC0+math.floor(db/64)%0x20,0x80+db%0x40)else e3=string.char(0xE0+math.floor(db/4096)%0x10,0x80+math.floor(db/64)%0x40,0x80+db%0x40)end;table.insert(b7,e3)else table.insert(b7,e0[string.sub(b6,c_,dP)])end end;table.insert(b7,string.sub(dP,dP+1))assert(string.find(b6,e1,dP+1),"String decoding failed: missing closing "..e1 .." at position "..dP.."(for string at position "..dQ..")")return table.concat(b7,""),dP+2 end;function dH(b6,dQ)local e6=" \n\r\t"local dT=string.len(b6)while string.find(e6,string.sub(b6,dQ,dQ),1,true)and dQ<=dT do dQ=dQ+1 end;return dQ end;local e7={['"']='\\"',['\\']='\\\\',['/']='\\/',['\b']='\\b',['\f']='\\f',['\n']='\\n',['\r']='\\r',['\t']='\\t'}function dA.encodeString(b6)local b6=tostring(b6)return b6:gsub(".",function(e8)return e7[e8]end)end;function dJ(b7)if b7==m.EMPTY_ARRAY then return true,0 end;if b7==m.EMPTY_OBJECT then return false end;local e9=0;for au,av in pairs(b7)do if type(au)=='number'and math.floor(au)==au and 1<=au then if not dK(av)then return false end;e9=math.max(e9,au)else if au=='n'then if av~=(b7.n or#b7)then return false end else if dK(av)then return false end end end end;return true,e9 end;function dK(du)local b7=type(du)return b7=='string'or b7=='boolean'or b7=='number'or b7=='nil'or b7=='table'or b7=='function'and du==m.null end;return m end;local ea='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'function l.base64encode(eb)return(eb:gsub('.',function(e3)local ec,ed='',e3:byte()for c_=8,1,-1 do ec=ec..(ed%2^c_-ed%2^(c_-1)>0 and'1'or'0')end;return ec end)..'0000'):gsub('%d%d%d?%d?%d?%d?',function(e3)if#e3<6 then return''end;local e8=0;for c_=1,6 do e8=e8+(e3:sub(c_,c_)=='1'and 2^(6-c_)or 0)end;return ea:sub(e8+1,e8+1)end)..({'','==','='})[#eb%3+1]end;function l.base64decode(eb)eb=string.gsub(eb,'[^'..ea..'=]','')return eb:gsub('.',function(e3)if e3=='='then return''end;local ec,aS='',ea:find(e3)-1;for c_=6,1,-1 do ec=ec..(aS%2^c_-aS%2^(c_-1)>0 and'1'or'0')end;return ec end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(e3)if#e3~=8 then return''end;local e8=0;for c_=1,8 do e8=e8+(e3:sub(c_,c_)=='1'and 2^(8-c_)or 0)end;return string.char(e8)end)end;m=l.createJson()k.printToConsole("load LuaPanda success",1)return k